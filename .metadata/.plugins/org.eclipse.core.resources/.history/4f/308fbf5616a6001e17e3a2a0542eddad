package com.zeus.controller;

import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.List;

import org.springframework.format.annotation.DateTimeFormat;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.multipart.MultipartFile;

import com.zeus.domain.Address;
import com.zeus.domain.Card;
import com.zeus.domain.Member;

import lombok.extern.java.Log;

@Log
@Controller
public class MemberController {

	@RequestMapping(value = "/registerForm", method = RequestMethod.GET)
	public String registerForm() {
		log.info("registerForm");

		return "registerForm";
	}

//	@RequestMapping(value = "/registerbeans01", method = RequestMethod.POST)
//	public String registerbeans01(Member member) {
//		log.info("registerBeans");
//		log.info("member.getUserId() = " + member.getUserId());
//		log.info("member.getPassword() = " + member.getPassword());
//		log.info("member.getCoin() = " + member.getCoin());
//		return "success";
//	}
//
//	@RequestMapping(value = "/registerbeans02", method = RequestMethod.POST)
//	public String registerbeans02(Member member, int coin) {
//		log.info("registerBeans");
//		log.info("member.getUserId() = " + member.getUserId());
//		log.info("member.getPassword() = " + member.getPassword());
//		log.info("member.getCoin() = " + member.getCoin());
//		log.info("coin = " + coin);
//		return "success";
//	}

//	====================================================================================

//	@RequestMapping(value = "/registerByDate01", method = RequestMethod.GET)
//	public String registerByDate01(String userId, Date dateOfBirth) {
//		log.info("registerByDate01");
//		log.info("userId = " + userId);
//		log.info("dateOfBirth =" + dateOfBirth);
//		return "success";
//	}
//
//	@RequestMapping(value = "/registerByDate02", method = RequestMethod.GET)
//	public String registerByDate02(Member member) {
//		log.info("registerByDate02");
//		log.info("member.getUserId() = " + member.getUserId());
//		log.info("member.getDateOfBirth() = " + member.getDateOfBirth());
//		return "success";
//	}
//
//	@RequestMapping(value = "/registerdate", method = RequestMethod.POST)
//	public String registerdate(Member member) {
//		log.info("registerByDate");
//		log.info("member.getUserId() = " + member.getUserId());
//		log.info("member.getPassword() = " + member.getPassword());
//		log.info("member.getDateOfBirth() = " + member.getDateOfBirth());
//		return "success";
//	}

//	====================================================================================

//	@RequestMapping(value = "/register", method = RequestMethod.POST)
//	public String register(Member member) {
//		log.info("register");
//		log.info("member.getUserId() = " + member.getUserId());
//		log.info("member.getPassword() = " + member.getPassword());
//		log.info("member.getDateOfBirth() = " + member.getDateOfBirth());
//		return "success";
//	}
//
//	@RequestMapping(value = "/registerByDateFormat", method = RequestMethod.GET)
//	public String registerByDateFormat(String userId, @DateTimeFormat(pattern = "yyyyMMdd") Date dateOfBirth) {
//		log.info("registerByDateFormat");
//		log.info("userId = " + userId);
//		log.info("dateOfBirth = " + dateOfBirth);
//		return "success";
//	}
//
//	@RequestMapping(value = "/registerByDateFormat01", method = RequestMethod.GET)
//	public String registerByDateFormat01(String userId, @DateTimeFormat(pattern = "yyyy-MM-dd") Date dateOfBirth) {
//		log.info("registerByDateFormat01");
//		log.info("userId = " + userId);
//		log.info("dateOfBirth = " + dateOfBirth);
//		return "success";
//	}
//
//	@RequestMapping(value = "/registerByDateFormat02", method = RequestMethod.GET)
//	public String registerByDateFormat02(String userId, @DateTimeFormat(pattern = "yyyy/MM/dd") Date dateOfBirth) {
//		log.info("registerByDateFormat02");
//		log.info("userId = " + userId);
//		log.info("dateOfBirth = " + dateOfBirth);
//		return "success";
//	}
//
//	@RequestMapping(value = "/registerByDateFormat03", method = RequestMethod.GET)
//	public String registerByDate03(Member member) {
//		log.info("registerByDateFormat03");
//		log.info("member.getUserId() = " + member.getUserId());
//		log.info("member.getDateOfBirth() = " + member.getDateOfBirth());
//		return "success";
//	}

//	====================================================================================

	@GetMapping(value = "/model01")
	public String model01(Model model) {
		log.info("model01");
		model.addAttribute("userId", "hong");
		model.addAttribute("password", "1234");
		model.addAttribute("email", "aaa@ccc.com");
		model.addAttribute("userName", "홍길동");
		model.addAttribute("birthDay", "1989-09-07");
		return "model01"; // 뷰 파일명
	}

	@GetMapping(value = "/model02")
	public String model02(Model model) {
		log.info("model02");
		Member member = new Member();
		member.setUserId("hongkd");
		member.setPassword("1234");
		member.setEmail("aaa@ccc.com");
		member.setUserName("홍길동");

		Calendar cal = Calendar.getInstance();
		cal.set(Calendar.YEAR, 1988);
		cal.set(Calendar.MONTH, 10);
		cal.set(Calendar.DAY_OF_MONTH, 7);
		member.setDateOfBirth(cal.getTime());
		model.addAttribute(member);

		return "model02"; // 뷰 파일명
	}

//	@GetMapping(value = "/model03")
//	public String model03(Model model) {
//		log.info("model03");
//		String[] carArray = { "saab", "audi" };
//
//		List<String> carList = new ArrayList<String>();
//		carList.add("saab");
//		carList.add("audi");
//
//		String[] hobbyArray = { "Music", "Movie" };
//
//		List<String> hobbyList = new ArrayList<String>();
//		hobbyList.add("Music");
//		hobbyList.add("Movie");
//
//		model.addAttribute("carArray", carArray);
//		model.addAttribute("carList", carList);
//		model.addAttribute("hobbyArray", hobbyArray);
//		model.addAttribute("hobbyList", hobbyList);
//
//		return "model03"; // 뷰 파일명
//	}
	
	@GetMapping(value = "/model03")
	public String model03(Model model) {
		log.info("model03");
		
		String[] carArray = {"saab" , "audi"};
		List<String> carList = new ArrayList<String>();
		carList.add("saab");
		carList.add("audi");
		
		String[] hobbyArray = {"Music" , "Movic"};
		
		List<String> hobbyList = new ArrayList<String>();
		hobbyList.add("Music");
		hobbyList.add("Movic");
		
		model.addAttribute("carArray", carArray);
		model.addAttribute("carList", carList);
	
		model.addAttribute("hobbyArray", hobbyArray);
		model.addAttribute("hobbyList", hobbyList);
		
		return "model03";
	}
	

	@GetMapping(value = "/model04")
	public String model04(Model model) {
		log.info("model04");

		Member member = new Member();

		Address address = new Address();
		address.setPostCode("080908");
		address.setLocation("seoul");

		member.setAddress(address);
		List<Card> cardList = new ArrayList<Card>();

		Card card1 = new Card();
		card1.setNo("123456");

		Calendar cal = Calendar.getInstance();
		cal.set(Calendar.YEAR, 2020);
		cal.set(Calendar.MONTH, 9);
		cal.set(Calendar.DAY_OF_MONTH, 8);

		card1.setValidMonth(cal.getTime());

		cardList.add(card1);

		Card card2 = new Card();
		card2.setNo("456786");

		cal.set(Calendar.YEAR, 2020);
		cal.set(Calendar.MONTH, 11);
		cal.set(Calendar.DAY_OF_MONTH, 12);

		card2.setValidMonth(cal.getTime());
		cardList.add(card2);
		member.setCardList(cardList);
		model.addAttribute("user", member);

		return "model04"; // 뷰 파일명
	}

	@GetMapping(value = "/model05")
	public String model05(Model model) {
		log.info("model05");

		Member member = new Member();

		member.setUserId("hong");
		member.setPassword("1234");
		member.setEmail("aaa@ccc.com");
		member.setUserName("홍길동");

		member.setGender("female");

		member.setDeveloper("Y");
		member.setForeigner(true);

		member.setNationality("Australia");

		// user.setCars(" saab,audi");
		member.setCars("saab");

		String[] carArray = { "saab", "audi" };

		member.setCarArray(carArray);

		List<String> carList = new ArrayList<String>();
		carList.add("saab");
		carList.add("audi");

		member.setCarList(carList);

		member.setHobby("Movie");
		String[] hobbyArray = { "Music", "Movie" };
		member.setHobbyArray(hobbyArray);

		List<String> hobbyList = new ArrayList<String>();
		hobbyList.add("Music");
		hobbyList.add("Movie");
		member.setHobbyList(hobbyList);

		Address address = new Address();
		address.setPostCode("080908");
		address.setLocation("seoul");
		member.setAddress(address);

		List<Card> cardList = new ArrayList<Card>();
		Card card1 = new Card();
		card1.setNo("123456");

		Calendar cal = Calendar.getInstance();
		cal.set(Calendar.YEAR, 2020);
		cal.set(Calendar.MONTH, 9);
		cal.set(Calendar.DAY_OF_MONTH, 8);
		card1.setValidMonth(cal.getTime());
		cardList.add(card1);

		Card card2 = new Card();
		card2.setNo("456786");

		cal.set(Calendar.YEAR, 2022);
		cal.set(Calendar.MONTH, 11);
		cal.set(Calendar.DAY_OF_MONTH, 7);

		card2.setValidMonth(cal.getTime());

		cardList.add(card2);

		member.setCardList(cardList);

		cal.set(Calendar.YEAR, 1988);
		cal.set(Calendar.MONTH, 10);
		cal.set(Calendar.DAY_OF_MONTH, 7);

		member.setDateOfBirth(cal.getTime());
		String introduction = "안녕하세요.\n반갑습니다.";
		member.setIntroduction(introduction);
		model.addAttribute("user", member);

		return "model05"; // 뷰 파일명
	}

	@PostMapping(value = "/uploadAjax", produces = "text/plain;charset=UTF-8")
	public ResponseEntity<String> uploadAjax(MultipartFile file) throws Exception{
		String originalFilename = file.getOriginalFilename();
	log.info("originalName: " + originalFilename);
	ResponseEntity<String> entity = new ResponseEntity<String>("UPLOADSUCCESS " + originalFilename, HttpStatus.OK);
	return entity;
	}
	
//	====================================================================================

	
	@RequestMapping(value = "/registerModelForm", method = RequestMethod.GET)
	public String registerModelForm() {
		log.info("registerModelForm");

		return "registerModelForm";
	}
	
	@PostMapping(value = "/registerModelForm01")
	public String registerModelForm01(@ModelAttribute("userId") String userId ,@ModelAttribute("password") String password) {
		log.info("registerModelForm01");

		return "registerModelForm01";
	}
	
//	====================================================================================

	
	@RequestMapping(value = "/registerSpringForm", method = RequestMethod.GET)
	public String registerSpringForm(Model model) {
		log.info("registerSpringForm");
		model.addAttribute("user", new Member());

		return "registerSpringForm";
	}
	
	@PostMapping(value = "/register")
	public String register(Member member ,Model model) {
		log.info("register");
		model.addAttribute("member", member);

		return "register";
	}
	
}